<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">

    <!--Control bar button-->
    <Style x:Key="controlButton" TargetType="Button">
        <!--Normal button style-->
        <Setter Property="Width" Value="35"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource panelActiveColor}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Boder Button and hover-->
    <Style x:Key="GradientBorderButton" TargetType="Button">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="OuterBorder" BorderThickness="1">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Color="{StaticResource winBoderColor1}" Offset="0"/>
                                <GradientStop Color="{StaticResource winBoderColor2}" Offset="0.75"/>
                                <GradientStop Color="{StaticResource winBoderColor3}" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.BorderBrush>

                        <!-- Background thay đổi khi hover -->
                        <Border x:Name="InnerBorder" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"/>
                        </Border>
                    </Border>

                    <!-- Trigger để đổi màu khi hover -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="InnerBorder" Property="Background" Value="LightPink"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="InnerBorder" Property="Background" Value="LightYellow"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="InnerBorder" Property="Background" Value="Gray"/>
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GradientBorderButton2" TargetType="Button">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="OuterBorder" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Color="{StaticResource winBoderColor1}" Offset="0"/>
                                <GradientStop Color="{StaticResource winBoderColor2}" Offset="0.75"/>
                                <GradientStop Color="{StaticResource winBoderColor3}" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.BorderBrush>

                        <!-- Background thay đổi khi hover -->
                        <Border x:Name="InnerBorder" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  RecognizesAccessKey="True"/>
                        </Border>
                    </Border>

                    <!-- Trigger để đổi màu khi hover -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="InnerBorder" Property="Background" Value="LightPink"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="InnerBorder" Property="Background" Value="LightYellow"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="InnerBorder" Property="Background" Value="Gray"/>
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GradientBorderButtonTransparent" TargetType="Button">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="OuterBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <!--<Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Color="{StaticResource winBoderColor1}" Offset="0"/>
                                <GradientStop Color="{StaticResource winBoderColor2}" Offset="0.75"/>
                                <GradientStop Color="{StaticResource winBoderColor3}" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.BorderBrush>-->

                        <!-- Background thay đổi khi hover -->
                        <Border x:Name="InnerBorder" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              RecognizesAccessKey="True"/>
                        </Border>
                    </Border>

                    <!-- Trigger để đổi màu khi hover -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="InnerBorder" Property="Background" Value="LightPink"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="InnerBorder" Property="Background" Value="LightYellow"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="InnerBorder" Property="Background" Value="Gray"/>
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>